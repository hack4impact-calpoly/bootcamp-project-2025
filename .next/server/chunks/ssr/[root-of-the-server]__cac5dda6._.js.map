{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/willi/WebstormProjects/bootcamp-project-2025/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/willi/WebstormProjects/bootcamp-project-2025/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium hover:scale-105 transition-all duration-100 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background text-foreground shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        grow: \"text-primary transition-all duration-200 ease-in-out hover:scale-120 font-bold\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"p-1\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,4dACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;YACN,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/willi/WebstormProjects/bootcamp-project-2025/src/components/icons/darkmodeicon.tsx"],"sourcesContent":["import {forwardRef} from \"react\";\r\nimport * as React from \"react\";\r\n\r\ntype IconProps = React.ComponentProps<\"svg\">;\r\n\r\nexport const DarkModeIcon = forwardRef<SVGSVGElement, IconProps>(\r\n    ({ className, ...props }, ref) => {\r\n        return (\r\n            <svg\r\n                ref={ref}\r\n                className={className}\r\n                viewBox=\"0 -960 960 960\"\r\n                {...props}\r\n            >\r\n                <path\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"30\"\r\n                    fill=\"currentColor\"\r\n                    d=\"M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Zm0-80q88 0 158-48.5T740-375q-20 5-40 8t-40 3q-123 0-209.5-86.5T364-660q0-20 3-40t8-40q-78 32-126.5 102T200-480q0 116 82 198t198 82Zm-10-270Z\"\r\n                />\r\n            </svg>\r\n        );\r\n    });\r\n\r\nexport default DarkModeIcon;"],"names":[],"mappings":";;;;;;;AAAA;;;AAKO,MAAM,6BAAe,IAAA,mNAAU,EAClC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACtB,qBACI,8OAAC;QACG,KAAK;QACL,WAAW;QACX,SAAQ;QACP,GAAG,KAAK;kBAET,cAAA,8OAAC;YACG,QAAO;YACP,aAAY;YACZ,MAAK;YACL,GAAE;;;;;;;;;;;AAIlB;uCAEW","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/willi/WebstormProjects/bootcamp-project-2025/src/components/icons/lightmodeicon.tsx"],"sourcesContent":["import {forwardRef} from \"react\";\r\nimport * as React from \"react\";\r\n\r\ntype IconProps = React.ComponentProps<\"svg\">;\r\n\r\nexport const LightModeIcon = forwardRef<SVGSVGElement, IconProps>(\r\n    ({ className, ...props }, ref) => {\r\n    return (\r\n        <svg\r\n            ref={ref}\r\n            className={className}\r\n            viewBox=\"0 -960 960 960\"\r\n            {...props}\r\n        >\r\n            <path\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"30\"\r\n                fill=\"currentColor\"\r\n                d=\"M480-360q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Zm326-268Z\"\r\n            />\r\n        </svg>\r\n    );\r\n});\r\n\r\nexport default LightModeIcon;"],"names":[],"mappings":";;;;;;;AAAA;;;AAKO,MAAM,8BAAgB,IAAA,mNAAU,EACnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACI,8OAAC;QACG,KAAK;QACL,WAAW;QACX,SAAQ;QACP,GAAG,KAAK;kBAET,cAAA,8OAAC;YACG,QAAO;YACP,aAAY;YACZ,MAAK;YACL,GAAE;;;;;;;;;;;AAIlB;uCAEe","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/willi/WebstormProjects/bootcamp-project-2025/src/components/client/darkmodetoggle.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport {Button} from \"@/components/ui/button\";\r\nimport DarkModeIcon from \"@/components/icons/darkmodeicon\";\r\nimport LightModeIcon from \"@/components/icons/lightmodeicon\";\r\n\r\nfunction DarkModeToggle() {\r\n    let [darkMode, setDarkMode] = useState(true);\r\n    const isFirstRender = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender.current) {\r\n            isFirstRender.current = false;\r\n            return;\r\n        }\r\n        document.documentElement.classList.toggle(\"dark\");\r\n    }, [darkMode])\r\n\r\n    return (\r\n        <Button variant=\"ghost\" size=\"icon\" onClick={() => setDarkMode(state => !state)}>\r\n            {darkMode ? <DarkModeIcon/> : <LightModeIcon/>}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default DarkModeToggle;"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,SAAS;IACL,IAAI,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,gBAAgB,IAAA,+MAAM,EAAC;IAE7B,IAAA,kNAAS,EAAC;QACN,IAAI,cAAc,OAAO,EAAE;YACvB,cAAc,OAAO,GAAG;YACxB;QACJ;QACA,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;IAC9C,GAAG;QAAC;KAAS;IAEb,qBACI,8OAAC,4IAAM;QAAC,SAAQ;QAAQ,MAAK;QAAO,SAAS,IAAM,YAAY,CAAA,QAAS,CAAC;kBACpE,yBAAW,8OAAC,sJAAY;;;;iCAAK,8OAAC,uJAAa;;;;;;;;;;AAGxD;uCAEe","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/willi/WebstormProjects/bootcamp-project-2025/src/components/client/GlobalAnimations.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport {gsap} from \"gsap\";\r\nimport {useGSAP} from \"@gsap/react\";\r\nimport {SplitText} from \"gsap/SplitText\";\r\n\r\nfunction GlobalAnimations() {\r\n    //All intro animations using opacity must set initial css opacity to 0 to avoid flicker on load\r\n    useGSAP(() => {\r\n        gsap.registerPlugin(SplitText);\r\n\r\n        //fade in on initial load\r\n        const siteBorder = document.querySelector(\"#site-border\");\r\n        gsap.set(siteBorder, {\r\n            \"--site-border-alpha\": \"0%\",\r\n            borderColor: \"color-mix(in oklch, var(--border) var(--site-border-alpha), transparent)\"\r\n        });\r\n        gsap.to(siteBorder, {\r\n            \"--site-border-alpha\": \"100%\",\r\n            duration: 0.6,\r\n            ease: \"power1.out\",\r\n            delay: 0.3\r\n        });\r\n\r\n        gsap.from(\".nav-hero\", {\r\n            x: -10,\r\n            autoAlpha: 0,\r\n            ease: \"power1.out\",\r\n            stagger: 0.1,\r\n            delay: 0.3,\r\n            immediateRender: false,\r\n        });\r\n\r\n        gsap.from(\".nav-links\", {\r\n            x: -10,\r\n            autoAlpha: 0,\r\n            ease: \"power1.out\",\r\n            delay: 0.65,\r\n            stagger: 0.06,\r\n            immediateRender: false,\r\n        });\r\n\r\n        //Nav name hover effect\r\n        const navName = document.querySelector(\"#nav-name\");\r\n        const split = new SplitText(navName, {type: \"chars\"});\r\n        let waveTween: gsap.core.Tween;\r\n        navName?.addEventListener(\"mouseenter\", () => {\r\n            waveTween?.kill();\r\n\r\n            waveTween = gsap.to(split.chars, {\r\n                y: -5,\r\n                duration: 0.3,\r\n                ease: \"sine.inOut\",\r\n                repeat: -1,\r\n                yoyo: true,\r\n                yoyoEase: true,\r\n                stagger: {\r\n                    each: 0.07,\r\n                    repeat: -1\r\n                }\r\n            });\r\n        });\r\n        navName?.addEventListener(\"mouseleave\", () => {\r\n            waveTween?.kill();\r\n\r\n            gsap.to(split.chars, {\r\n                y: 0,\r\n                duration: 0.15,\r\n                ease: \"power2.out\",\r\n                stagger: 0.02\r\n            });\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div className=\"fixed\"></div>\r\n    );\r\n}\r\n\r\nexport default GlobalAnimations;"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AALA;;;;;AAOA,SAAS;IACL,+FAA+F;IAC/F,IAAA,0JAAO,EAAC;QACJ,qJAAI,CAAC,cAAc,CAAC,8IAAS;QAE7B,yBAAyB;QACzB,MAAM,aAAa,SAAS,aAAa,CAAC;QAC1C,qJAAI,CAAC,GAAG,CAAC,YAAY;YACjB,uBAAuB;YACvB,aAAa;QACjB;QACA,qJAAI,CAAC,EAAE,CAAC,YAAY;YAChB,uBAAuB;YACvB,UAAU;YACV,MAAM;YACN,OAAO;QACX;QAEA,qJAAI,CAAC,IAAI,CAAC,aAAa;YACnB,GAAG,CAAC;YACJ,WAAW;YACX,MAAM;YACN,SAAS;YACT,OAAO;YACP,iBAAiB;QACrB;QAEA,qJAAI,CAAC,IAAI,CAAC,cAAc;YACpB,GAAG,CAAC;YACJ,WAAW;YACX,MAAM;YACN,OAAO;YACP,SAAS;YACT,iBAAiB;QACrB;QAEA,uBAAuB;QACvB,MAAM,UAAU,SAAS,aAAa,CAAC;QACvC,MAAM,QAAQ,IAAI,8IAAS,CAAC,SAAS;YAAC,MAAM;QAAO;QACnD,IAAI;QACJ,SAAS,iBAAiB,cAAc;YACpC,WAAW;YAEX,YAAY,qJAAI,CAAC,EAAE,CAAC,MAAM,KAAK,EAAE;gBAC7B,GAAG,CAAC;gBACJ,UAAU;gBACV,MAAM;gBACN,QAAQ,CAAC;gBACT,MAAM;gBACN,UAAU;gBACV,SAAS;oBACL,MAAM;oBACN,QAAQ,CAAC;gBACb;YACJ;QACJ;QACA,SAAS,iBAAiB,cAAc;YACpC,WAAW;YAEX,qJAAI,CAAC,EAAE,CAAC,MAAM,KAAK,EAAE;gBACjB,GAAG;gBACH,UAAU;gBACV,MAAM;gBACN,SAAS;YACb;QACJ;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;;;;;;AAEvB;uCAEe","debugId":null}}]
}